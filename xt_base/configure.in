dnl Configure input script for XicTools.
dnl Process this file with autoconf to produce a configure script.
dnl Copyright (c) Whiteley Research Inc, 2002
dnl $Id: configure.in,v 1.233 2016/09/28 22:49:23 stevew Exp $

dnl ***
dnl *** Initialize
dnl ***

AC_INIT(configure)

linux32=no
if test "`uname -m`" = i686; then
    linux32=yes;
fi

dnl --enable-itopok
dnl Allow make install to default location.
itopok="no"
AC_ARG_ENABLE(itopok,
    [  ]--enable-itopok         Allow install from source to default location,
if test $enable_itopok = yes; then
    itopok="yes"
fi
)

dnl --enable-force32
dnl Force 32-bit build on 64-bit systems.
force32="no"
AC_ARG_ENABLE(force32,
    [  ]--enable-force32        force 32-bit build,
if test $enable_force32 = yes; then
    force32="yes"
fi
)

dnl Set the -m32 flag to build for 32-bits, which is GNU-specific.
if test $linux32 = no; then
    if test "`uname -m`" = x86_64; then
        if test $force32 = yes; then
            flags32="-m32 -march=i686"
            linux32=yes
            export PKG_CONFIG_PATH=/usr/lib/pkgconfig
        fi
    fi
fi

DATE=`/bin/date`
if test -d ../wrspice; then
    SPICE_VERSION=`../wrspice/version wrspice`
    DEVLIB_VERSION=`../wrspice/version devlib`
    DEVLIB_SHARED_FILE=libwrsdev.so.2.0
    DEVLIB_STATIC_FILE=libwrsdev.a
fi
if test -d ../xic; then
    GFX_VERSION=`../xic/version xic`
fi
TOOLROOT="xictools"
AC_SUBST(prefix)
AC_SUBST(itopok)
AC_SUBST(DATE)
AC_SUBST(SPICE_VERSION)
AC_SUBST(DEVLIB_VERSION)
AC_SUBST(DEVLIB_SHARED_FILE)
AC_SUBST(DEVLIB_STATIC_FILE)
AC_SUBST(GFX_VERSION)
AC_SUBST(TOOLROOT)

dnl ***
dnl *** Setup configure args
dnl ***

dnl --enable-mingw[=/path/to/mingw]
dnl enable mingw (Win32), the default on MSW systems, cross tools otherwise
mingw="no"
if test x"$MINGW" = x; then
    mingw_dir="/usr/local/mingw32"
else
    mingw_dir="$MINGW"
fi
AC_ARG_ENABLE(mingw,
    [  ]--enable_mingw=DIR      build using mingw path optional,
if test $enable_mingw != yes -a $enable_mingw != no; then
    mingw_dir=$enable_mingw
    mingw=yes
elif test $enable_mingw = yes; then
    mingw=yes
fi
)

dnl --enable-mingwlib=/path/to/mingw_libs
dnl this sets a -L/path to extra libraries used with mingw
mingwlib=
AC_ARG_ENABLE(mingwlib,
    [  ]--enable_mingwlib=DIR   specify path to extra libs for mingw,
if test $enable_mingwlib != yes -a $enable_mingwlib != no; then
    mingwlib="$enable_mingwlib"
fi
)

dnl --enable-nomozy
dnl don't build/link mozy, GNU tainted
nomozy="no"
AC_ARG_ENABLE(nomozy,
    [  ]--enable-nomozy        skip mozy build,
if test $enable_nomozy = yes; then
    nomozy="yes"
fi
)
if test ! -d ../mozy; then
    nomozy=yes
fi

dnl --enable-secure
dnl build and enable licensing system for Xic and WRspice
havesecure="no"
AC_ARG_ENABLE(havesecure,
    [  ]--enable-secure        use licensing system,
if test $enable_secure = yes; then
    havesecure="yes"
fi
)
if test ! -d ../secure; then
    havesecure=no
fi

dnl  Enable OpenAccess support, i.e., enable and build the OA plugin.  This
dnl  requires the presence of an OpenAccess source tree (for the include
dnl  files) and the shared libraries in order to run.  The source code is
dnl  available from the Si2 organization.  Note that commercial use requires
dnl  joining the OpenAccess Si2 interest group.
dnl
dnl --enable-oa=/path/to/oa/libs/
OA_DEF_LOC=/usr/local/cad/OA-22.04
with_oa="no"
AC_ARG_ENABLE(oa,
    [  ]--enable-oa[[=path_to_oa]]             enable link to OpenAccess,
if test $enable_oa != yes -a $enable_oa != no; then
    oa_loc=$enable_oa
    with_oa=yes
elif test $enable_oa = yes; then
    with_oa=yes
    oa_loc=$OA_DEF_LOC
fi
)

dnl  Enable (limited) support for Cadence psf simulation data file format. 
dnl  This links to prebuilt libraries supplied with the oasis simulator
dnl  integration toolkit, for integrating a simulator (such as WRspice)
dnl  with the Cadence Analog Design Environment.  This is a Cadence
dnl  product, and will work with Centos 6 and 7 and equivalent.
dnl --enable-psf=/path/to/oasis-kit/libs/
PDF_DEF_LOC=$HOME/cadence/oasis-kit/tools.lnx86
with_psf="no"
with_psf_ok="no"
AC_ARG_ENABLE(psf,
    [  ]--enable-psf[[=path_to_psf]]           enable Cadence PSF support,
if test $enable_psf != yes -a $enable_psf != no; then
    psf_loc=$enable_psf
    with_psf=yes
elif test $enable_psf = yes; then
    with_psf=yes
    psf_loc=$PSF_DEF_LOC
fi
)

dnl --enable-valgrind
dnl should valgrind be enabled
valgrind="no"
AC_ARG_ENABLE(valgrind,
    [  ]--enable-valgrind       enable valgrind,
if test $enable_valgrind = yes; then
    valgrind="yes"
fi
)

dnl --enable-profiling
dnl should profiling be enabled
profiling="no"
AC_ARG_ENABLE(profiling,
    [  ]--enable-profiling      enable profiling,
if test $enable_profiling = yes; then
    profiling="yes"
fi
)

dnl --enable-gtk3[=config_dir]
dnl redundant except for giving pkg-config path
AC_ARG_ENABLE(gtk3,  [  ]--enable-gtk3[[=config_dir]]           link with gtk3,
if test $enable_gtk3 != yes -a $enable_gtk3 != no; then
    gtkloc="$enable_gtk3"
    gtklocd="$enable_gtk3/"
fi
)

dnl --enable-quartz
dnl use OS X GTK-2 Quartz backend
with_quartz="no"
AC_ARG_ENABLE(quartz, [  ]--enable-quartz   use Quartz backend for OS X,
if test $enable_quartz = yes; then
    with_quartz=yes
fi
)

echo '#define HAVE_GTK2 1'>> confdefs.h

if test $nomozy = no; then
    echo '#define HAVE_MOZY 1'>> confdefs.h
    USEMOZY=yes
else
    USEMOZY=no
fi
AC_SUBST(USEMOZY)

if test $havesecure = yes; then
    echo '#define HAVE_SECURE 1'>> confdefs.h
    USESECURE=yes
else
    USESECURE=no
fi
AC_SUBST(USESECURE)

dnl ***
dnl *** Check operating system and build environment
dnl ***

AC_PATH_PROG(PATCH, patch, "")
if test -z "$PATCH"; then
    echo "  Error: the \"patch\" program is required and not found."
    exit 1
fi
AC_PATH_PROG(FLEX, flex, "")
if test -z "$FLEX"; then
    echo "  Error: the \"flex\" program is required and not found."
    exit 1
fi
AC_PATH_PROG(BISON, bison, "")
if test -z "$BISON"; then
    echo "  Error: the \"bison\" program is required and not found."
    exit 1
fi
AC_PATH_PROG(acf1, autoconf, "")
if test -z "$acf1"; then
    AC_PATH_PROG(acf2, autoconf-2.69, "")
    if test -z "$acf2"; then
        echo "  Error: the \"autoconf\" program (\"autoconf-2.69\" in Cygwin)" 
        echo "  is required and not found."
        exit 1
    else
        ACONF=$acf2
    fi
else
    ACONF=$acf1
fi
AC_PATH_PROG(AR, ar, "")
if test -z "$AR"; then
    echo "  Error: the \"ar\" program is required and not found."
    exit 1
fi
AC_PATH_PROG(LD, ld, "")
AC_PATH_PROG(RANLIB, ranlib, "")

sys_os=`uname`
if test ${sys_os:0:6} = CYGWIN; then
    mingw=yes
    sys_os="CYGWIN"
    CC=$mingw_dir/bin/gcc
    CXX=$mingw_dir/bin/g++
    RESOURCE=resource.o
dnl # static link avoids libwinpthread-1.dll dependence
    WINPTHREADFIX="-static"

dnl # Win-builds has the png include files in a weird place, where they
dnl # won't be found.  This will prevent png image support unless
dnl # corrected.  Here we look for this and do the correction if
dnl # possible.  If the operation fails (permission problem) the user
dnl # must do this by hand.
    if test ! -f $mingw_dir/include/png.h -a  \
        -f $mingw_dir/include/libpng14/png.h; then
        echo "Configuring win-builds:"
        echo "cp -f $mingw_dir/include/libpng14/png.h $mingw_dir/include"
        cp -f $mingw_dir/include/libpng14/png.h $mingw_dir/include
        if test $? != 0; then
            echo "Didn't work, do this by hand.  See README file."
            exit 1
        fi
        echo "cp -f $mingw_dir/include/libpng14/pngconf.h $mingw_dir/include"
        cp -f $mingw_dir/include/libpng14/pngconf.h $mingw_dir/include
    fi

    AC_PATH_PROG(WINDRES, windres, "")
fi

AC_SUBST(ACONF)
AC_SUBST(AR)
AC_SUBST(LD)
AC_SUBST(RANLIB)
AC_SUBST(WINDRES)
AC_SUBST(RESOURCE)
AC_SUBST(WINPTHREADFIX)

AC_PROG_CC
AC_PROG_CXX

if test "$GCC" = yes; then
    if test -n "$flags32"; then
        CC="$CC $flags32"
        CXX="$CXX $flags32"
    fi
    DEPEND_PROG='$(CC) -MM'
    c_flags="-Wall -W -Wshadow -Wwrite-strings"
    if test $profiling = yes; then
        c_flags="-pg $c_flags"
    fi
else
    DEPEND_PROG='gcc -MM'
fi
AC_SUBST(DEPEND_PROG)

# Test whether a gcc option (-Wno-ignored-qualifiers) is valid.
NO_IGNORED_QUALIFIERS=""
AC_MSG_CHECKING([whether CC supports -Wno-ignored-qualifiers])

cat > conftest.cc << EOF
int main()
{ return 0; }
EOF
$CXX -c conftest.cc -Wno-ignored-qualifiers 1>&5 2>&5
if test $? = 0; then
    NO_IGNORED_QUALIFIERS=-Wno-ignored-qualifiers
    echo yes
else
    echo no
fi
rm -rf conftest*
AC_SUBST([NO_IGNORED_QUALIFIERS])

AC_PROG_MAKE_SET

LEX="flex -l"
AC_PROG_LEX
AC_PROG_YACC
AC_PATH_XTRA

DLL_SPICE_PROG='dll-wrspice'
NODLL_SPICE_PROG='wrspice'
DLL_XIC_PROG='dll-xic'
NODLL_XIC_PROG='xic'

case $sys_os in
CYGWIN*)
    EXESUFFIX=".exe"
    FILTER="|sed -e s/C:// -e s/
//g"
    MALLOC=
    OSNAME="Win32"
    ARCH="i386"
    DIST_SUFFIX="exe"
    INSTALL='$(BASE)/util/install-sh'
    lib_dirs="/usr/lib /usr/local/lib"
    SOEXT=dll
    oa_lpath=$oa_loc/lib/mingw_32/opt
    LSHFLAG="-shared -Wl,--enable-auto-import,--export-all-symbols"
    oa_cflags="-DOA_WINDOWS -DOA_MINGW -DOA_NO_DLL_ATTR"
    DLL_SPICE_PROG='wrspice'
    NODLL_SPICE_PROG='nodll-wrspice'
    DLL_XIC_PROG='xic'
    NODLL_XIC_PROG='nodll-xic)'
;;
Darwin)
    kern=`uname -r`
    tifs=$IFS
    IFS="."
    set $kern
    IFS=$tifs
dnl # uname -r returns the kernel release, it seems that the major
dnl # index - 4 is the OS release, e.g. kernel 10.4.0 is OS X 10.6.4.
    if test $1 -ge 13; then
        OSNAME="Darwin"
        ARCH="x86_64"
        DIST_SUFFIX="pkg"
        SDK="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
dnl # support OSX 10.10 (Yosemite) and later.
        UFLAGS="-mmacosx-version-min=10.10 -arch $ARCH -isysroot $SDK"
        MALLOC='$(BASE)/lib/malloc.a'
        oa_lpath=$oa_loc/lib/darwin_64/opt
    else
        echo "Architecture not supported."
        exit
    fi
    INSTALL='STRIPPROG="strip -S" $(BASE)/util/install-sh'
    lib_dirs="$lib_dirs $ac_x_libraries"
    SOEXT=dylib
    LSHFLAG="-dynamiclib -undefined dynamic_lookup"
;;
Linux)
    OSNAME="LinuxUnknown"
    ARCH="x86_64"
    DIST_SUFFIX="unknown"
    if test -f /etc/redhat-release; then
        dst=`rpm -qf /etc/redhat-release`
    elif test -f /etc/centos-release ; then
        dst=`rpm -qf /etc/centos-release`
    elif test -f /etc/SuSE-release ; then
        dst=`rpm -qf /etc/SuSE-release`
    fi
    if test -n "$dst"; then
dnl     # RPM-based:  Red Hat, CentOS, OpenSuSE, and others.  Recognize 5/6/7
dnl     # and assume RHEL production releases.  We obtain the release name
dnl     # and number from RPM, which will work even if someone hacked the text
dnl     # of the redhat-release file.
        DIST_SUFFIX="rpm"
        tifs=$IFS
        IFS=".-_ "
        set -- $dst
        IFS=$tifs
        word=$1
        ch=${word:0:1}
dnl     # Upper-case the first letter of oname.
        oname=`echo -n "$ch" | tr a-z A-Z; echo ${word:1}`
        major=$3
        minor=$4

        if test -n "$major"; then
dnl         # RedHat/CentOS/Fedora etc.  The $major may be a bare integer, or
dnl         # something like "5Server".  Convert non-digits to spaces, then
dnl         # keep only the first token. 

            major=`echo $major | tr -c 0-9 " "`
            set -- $major
            major=$1
        fi
        if test -z "$major"; then
dnl         # No number found in major, try minor.
            major="$minor"
            major=`echo $major | tr -c 0-9 " "`
            set -- $major
            major=$1
        fi
        if test -n "$major"; then
            case $major in
            1 | 2 | 3 | 4)
                echo "Architecture too archaic, not supported."
                exit
                ;;
            5)
                OSNAME="LinuxRHEL5"
                if test $linux32 = yes; then
                    ARCH="i686"
                    ac_x_libraries=`echo $ac_libraries | sed -e s/lib64/lib/g`
                else
                    ARCH="x86_64"
                    lib_dirs="/usr/lib64"
                fi
                ;;
            6)
                OSNAME="LinuxRHEL6"
                if test $linux32 = yes; then
                    ARCH="i686"
                    ac_x_libraries=`echo $ac_libraries | sed -e s/lib64/lib/g`
                    lib_dirs="/usr/lib"
                else
                    ARCH="x86_64"
                    lib_dirs="/usr/lib64"
                fi
                with_psf_ok=yes
                ;;
            7)
                OSNAME="LinuxRHEL7"
                if test $linux32 = yes; then
                    ARCH="i686"
                    ac_x_libraries=`echo $ac_libraries | sed -e s/lib64/lib/g`
                    lib_dirs="/usr/lib"
                else
                    ARCH="x86_64"
                    lib_dirs="/usr/lib64"
                fi
                with_psf_ok=yes
                ;;
            *)
                OSNAME="Linux$oname$major"
                if test $linux32 = yes; then
                    ARCH="i686"
                    ac_x_libraries=`echo $ac_libraries | sed -e s/lib64/lib/g`
                    lib_dirs="/usr/lib"
                else
                    ARCH="x86_64"
                    lib_dirs="/usr/lib64"
                fi
                ;;
            esac
        fi
    else
dnl     # Debian/Ubuntu, etc.

        if test -f /etc/arch_release; then
            OSNAME="LinuxArch"
dnl         # Uses "pacman" package management system.
        elif test -f /etc/gentoo_release; then
            OSNAME="LinuxGentoo"
dnl         # Uses "portage" package management system.
        elif test -f /etc/os-release; then
dnl         # This should find Debian, Ubuntu, and perhaps others.
dnl         # Need to parse the file, grab the first name token, and
dnl         # First version number.  Have to strip quotes.

            nm=`(while true; do
                read foo 
                if test -z "$foo"; then
                    break;
                fi
                tifs="$IFS"
                IFS="="
                set -- $foo
                IFS="$tifs"
                if test $1 = NAME; then
                    set -- $2
                    name=${1%\"}
                    name=${name#\"}
                elif test $1 = VERSION; then
                    IFS=". "
                    set -- $2
                    IFS="$tifs"
                    vers=${1#\"}
                fi
                if test -n "$name" -a -n "$vers"; then
                    echo $name$vers
                    break
                fi
            done) < /etc/os-release`
            if test -n "$nm"; then
                OSNAME=Linux$nm
                case $OSNAME in
                LinuxUbuntu*)  DIST_SUFFIX=deb ;;
                LinuxDebian*)  DIST_SUFFIX=deb ;;
                esac
            fi
        fi
        if test $linux32 = yes; then
            ARCH="i686"
            ac_x_libraries=`echo $ac_libraries | sed -e s/lib64/lib/g`
            lib_dirs="/usr/lib"
        else
            ARCH="x86_64"
            lib_dirs="/usr/lib64"
        fi
    fi

    if test $DIST_SUFFIX = unknown; then
        echo "Architecture $OSNAME not supported, continuing anyway."
    fi
    
    MALLOC='$(BASE)/lib/malloc.a'
    PIC_OPT="-fPIC"
    LFLAGS="-rdynamic"
    LSHFLAG="-shared"
    INSTALL='$(BASE)/util/install-sh'
    lib_dirs="$lib_dirs $ac_x_libraries"
    SOEXT=so
    if test $linux32 = yes; then
        if test -f $oa_loc/linux32/lib/opt/liboaCommon.so; then
            oa_lpath=$oa_loc/linux32/lib/opt
        elif test -f $oa_loc/linux/lib/opt/liboaCommon.so; then
            oa_lpath=$oa_loc/linux/lib/opt
        else
            oa_lpath=$oa_loc/lib/linux_32/opt
        fi
    else
        if test -f $oa_loc/linux64/lib/opt/liboaCommon.so; then
            oa_lpath=$oa_loc/linux64/lib/opt
        elif test -f $oa_loc/amd64/lib/opt/liboaCommon.so; then
            oa_lpath=$oa_loc/amd64/lib/opt
        else
            oa_lpath=$oa_loc/lib/linux_64/opt
        fi
    fi
;;
*)
    echo "*** Operating system $sys_os not supported"
    exit
;;
esac

if test $profiling = yes; then
   LFLAGS="-pg $LFLAGS"
fi

AC_SUBST(SDK)
AC_SUBST(UFLAGS)
AC_SUBST(EXESUFFIX)
AC_SUBST(FILTER)
AC_SUBST(MALLOC)
AC_SUBST(OSNAME)
AC_SUBST(ARCH)
AC_SUBST(DIST_SUFFIX)
AC_SUBST(INCLXTRA)
AC_SUBST(SOEXT)
AC_SUBST(DLL_SPICE_PROG)
AC_SUBST(NODLL_SPICE_PROG)
AC_SUBST(DLL_XIC_PROG)
AC_SUBST(NODLL_XIC_PROG)

if test $with_oa = yes; then
    OA_INCLUDE=$oa_loc/include/oa
    OA_LIBS="-L$oa_lpath -loaCommon -loaBase -loaPlugIn -loaDM -loaTech \
 -loaDesign"
    OA_CFLAGS="-O -g -Wall -W -Wwrite-strings $oa_cflags"
    OA_SUBDIR="src/oa"
    echo '#define HAVE_OA 1'>> confdefs.h
fi
AC_SUBST(OA_INCLUDE)
AC_SUBST(OA_LIBS)
AC_SUBST(OA_CFLAGS)
AC_SUBST(OA_SUBDIR)

dnl # Always enable pthreads, supported on all platforms.
c_flags="$c_flags -pthread"

if test x$with_psf = xyes -a x$with_psf_ok = xyes; then
TKTOOLS=$psf_loc
PSINCL=" \\
-I\$(TKTOOLS)/dfII/include                 \\
-I\$(TKTOOLS)/dfII/pvt/include             \\
-I\$(TKTOOLS)/virtuos/include              \\
-I\$(TKTOOLS)/dfII/src/artist/psf/awfPSFWriter -DWITH_PSFILE"
if test $ARCH = x86_64 -o $ARCH = amd64; then
PSLIBS=" \\
\$(TKTOOLS)/dfII/pvt/lib/64bit/awflib.a    \\
\$(TKTOOLS)/lib/64bit/drlLog.a             \\
\$(TKTOOLS)/lib/64bit/psl.a                \\
\$(TKTOOLS)/virtuos/lib/64bit/virtuos.a    \\
\$(TKTOOLS)/lib/64bit/libfastt.a           \\
\$(TKTOOLS)/lib/64bit/libcls.a             \\
\$(TKTOOLS)/lib/64bit/libcdsCommon.a -lelf"
else
PSLIBS=" \\
\$(TKTOOLS)/dfII/pvt/lib/awflib.a    \\
\$(TKTOOLS)/lib/drlLog.a             \\
\$(TKTOOLS)/lib/psl.a                \\
\$(TKTOOLS)/virtuos/lib/virtuos.a    \\
\$(TKTOOLS)/lib/libfastt.a           \\
\$(TKTOOLS)/lib/libcls.a             \\
\$(TKTOOLS)/lib/libcdsCommon.a -lelf"
fi
fi
AC_SUBST(TKTOOLS)
AC_SUBST(PSLIBS)
AC_SUBST(PSINCL)

dnl # gcc-4.8.3 win-builds has trouble with -O3 when multi-threading.
dnl # Get seg faults, always at lines that disassemble to a movaps
dnl # instruction.  Seems to be an optimization for handling BBox on
dnl # the stack, which is not being aligned-16?  Haven't a clue why
dnl # it only crashes with multi-threads.
if test $OSNAME = Win32; then
    CFLAGS_S="-O2 $c_flags"
    CFLAGS_SG="-O2 -g $c_flags"
else
    CFLAGS_S="-O3 $c_flags"
    CFLAGS_SG="-O3 -g $c_flags"
fi
CFLAGSG="-O -g $c_flags"
CFLAGS="-O $c_flags"

if test $valgrind = yes; then
   dnl # Minimal optimization for memory leak debugging
   CFLAGS_S="-O0 $c_flags"
   CFLAGSG="-O0 -g $c_flags"
   CFLAGS_SG="-O0 -g $c_flags"
   CFLAGS="-O0 $c_flags"
fi

AC_SUBST(CFLAGS)
AC_SUBST(CFLAGS_S)
AC_SUBST(CFLAGSG)
AC_SUBST(CFLAGS_SG)
AC_SUBST(PIC_OPT)
AC_SUBST(LFLAGS)
AC_SUBST(LSHFLAG)
AC_SUBST(INSTALL)


dnl ***
dnl *** Graphical interface configuration
dnl ***

AC_CHECK_PROG(have_cfg, pkg-config, "yes", "no", $PATH:$gtkloc)
if test $have_cfg = yes; then
    ${gtklocd}pkg-config --exists gtk+-3.0
    if test $? = 0; then
        GRPREF=gtk
        if test -n "$EXESUFFIX"; then
dnl         # Filter needed in Windows, pkg-config adds ^M that chokes g++.
            tkcf="`${gtklocd}pkg-config --cflags gtk+-3.0 |sed -e s/
//g`"
            tkl="`${gtklocd}pkg-config --libs gtk+-3.0 |sed -e s/
//g`"
        else
            tkcf="`${gtklocd}pkg-config --cflags gtk+-3.0`"
            tkl="`${gtklocd}pkg-config --libs gtk+-3.0`"
        fi
        TOOLKITINC="-DUSE_GTK $tkcf"
        if test $OSNAME = "Darwin" -a $with_quartz = yes; then
            TOOLKITCFLAGS="-DWITH_QUARTZ"
        fi
        TOOLKITLIBS="$tkl"
    else
        echo "gtk3 not found"
        exit
    fi
else
    echo "pkg-config not found"
    exit
fi

AC_SUBST(GRPREF)
AC_SUBST(TOOLKITINC)
AC_SUBST(TOOLKITLIBS)
AC_SUBST(TOOLKITCFLAGS)
AC_SUBST(TOOLKITLFLAGS)
AC_SUBST(MOC)
AC_SUBST(QTBASE)


dnl ***
dnl *** Python and Tcl/Tk configuration
dnl ***

if test $OSNAME = "Darwin"; then
    if test -d /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/python2.7; then
        PY_INCLUDE="-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/python2.7"
        PY_LIBS="-L/usr/lib -lpython2.7"
        PY_TARGETS="py27.dylib"
        echo '#define HAVE_PYTHON 1'>> confdefs.h
    fi
    if test -f /usr/include/tcl.h; then
        TCL_INCLUDE=
        TCL_LIBS="-ltcl"
        echo '#define HAVE_TCL 1'>> confdefs.h
    fi
    if test -f /usr/include/tk.h; then
        TK_INCLUDE="$X_CFLAGS"
        TK_LIBS="-ltk"
        echo '#define HAVE_TK 1'>> confdefs.h
    fi
elif test ${OSNAME:0:5} = "Linux"; then
    if test -d /usr/include/python2.7; then
        PY_INCLUDE="-I/usr/include/python2.7"
        PY_LIBS="-lpython2.7"
        PY_TARGETS="py27.so"
        echo '#define HAVE_PYTHON 1'>> confdefs.h
    elif test -d /usr/include/python2.6; then
        PY_INCLUDE="-I/usr/include/python2.6"
        PY_LIBS="-lpython2.6"
        PY_TARGETS="py26.so"
        echo '#define HAVE_PYTHON 1'>> confdefs.h
    fi
    if test -f /usr/include/tcl.h; then
        vrs=`echo 'puts $tcl_version; exit 0' | tclsh`
        TCL_INCLUDE=
        TCL_LIBS="-ltcl$vrs"
        echo '#define HAVE_TCL 1'>> confdefs.h
        if test -f /usr/include/tk.h; then
            TK_INCLUDE="$X_CFLAGS"
            TK_LIBS="-ltk$vrs"
            echo '#define HAVE_TK 1'>> confdefs.h
        fi
    fi
fi

AC_SUBST(PY_TARGETS)
AC_SUBST(PY_INCLUDE)
AC_SUBST(PY_LIBS)
AC_SUBST(TCL_INCLUDE)
AC_SUBST(TCL_LIBS)
AC_SUBST(TK_INCLUDE)
AC_SUBST(TK_LIBS)


dnl ***
dnl *** Checks for header files
dnl ***

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(
    alloca.h dirent.h fcntl.h fenv.h float.h fnmatch.h limits.h pwd.h \
    regex.h setjmp.h sgtty.h stdlib.h strings.h sys/dir.h sys/file.h \
    sys/ioctl.h sys/resource.h sys/time.h sys/wait.h term.h termcap.h \
    termio.h termios.h ulimit.h unistd.h)
AC_EGREP_HEADER(sys_errlist, stdio.h, AC_DEFINE(SYS_ERRLIST_DEF))
dnl Detect when select takes int* as second arg (for HPUX)
AC_EGREP_HEADER(select.*int.*int, sys/time.h, AC_DEFINE(SELECT_TAKES_INTP))

AC_CHECK_HEADER(regex.h, , REGEX='$(BASE)/lib/libregex.a')

dnl ***
dnl *** Checks for typedefs, structures, and compiler characteristics
dnl ***
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_SIGNAL
dnl check for socklen_t
dnl AC_CHECK_SOCKTYPE(TYPE, DEFAULT)
AC_DEFUN(AC_CHECK_SOCKTYPE,
[AC_REQUIRE([AC_HEADER_STDC])dnl
AC_MSG_CHECKING(for $1)
AC_CACHE_VAL(ac_cv_type_$1,
[AC_EGREP_CPP(dnl
changequote(<<,>>)dnl
<<(^|[^a-zA-Z_0-9])$1[^a-zA-Z_0-9]>>dnl
changequote([,]), [#include <sys/types.h>
#include <sys/socket.h>
#if STDC_HEADERS
#include <stdlib.h>
#include <stddef.h>
#endif], ac_cv_type_$1=yes, ac_cv_type_$1=no)])dnl
AC_MSG_RESULT($ac_cv_type_$1)
if test $ac_cv_type_$1 = no; then
    AC_DEFINE($1, $2)
fi
]) 
AC_CHECK_SOCKTYPE(socklen_t, int)

AC_CHECK_TYPE(int64_t, long long)
if test $ac_cv_type_int64_t = "no"; then
    NEEDINT64="-DNEED_INT64_TYPEDEF"
fi

dnl ***
dnl *** Check for needed libraries
dnl ***

if test $OSNAME = "Win32"; then
    zzldflags=$LDFLAGS
    LDFLAGS=
    if test "z$mingwlib" != z; then
        LDFLAGS="-L$mingwlib"
    fi
    AC_CHECK_LIB(z, main)
    IMG_FLAGS=
    IMG_LIBS=
    AC_CHECK_LIB(png, main)
    AC_CHECK_LIB(png, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBPNG"
          IMG_LIBS="$IMG_LIBS -lpng")
    AC_CHECK_LIB(tiff, main)
    AC_CHECK_LIB(tiff, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBTIFF"
          IMG_LIBS="$IMG_LIBS -ltiff")
    AC_CHECK_LIB(jpeg, main)
    AC_CHECK_LIB(jpeg, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBJPEG"
          IMG_LIBS="$IMG_LIBS -ljpeg")
    LDFLAGS=$zzldflags
    MSLIBS=
    if test z"$mingwlib" != z; then
        MSLIBS="-L$mingwlib "
    fi
    MSLIBS=${MSLIBS}"-lgdi32 -lwinspool -lcomdlg32 -lole32 -loleaut32 \
 -luuid -lodbc32 -lversion -lcomctl32 -lwsock32 -lws2_32 -liphlpapi"
    MSLIBS2="-lbfd -liberty -lintl -liconv -lm"
    dnl -lbfd -liberty required for stackdump.o, and fnmatch used in mswfile.cc
    SLIBS="$MSLIBS"
    LIBS="$MSLIBS $MSLIBS2 $LIBS"
    EXTRALIBS="-lpthread"

    AC_CHECK_LIB(rt, main, LIBRT="-lrt")

elif test $OSNAME = "Darwin"; then
dnl  If the gtk3-bundle export package is found, use it.  Otherwise
dnl  assume libraries/includes are under /opt (MacPorts).
    if test $with_quartz = yes; then
        if test -d /usr/local/gtk3-bundle; then
            LIBS=-L/usr/local/gtk3-bundle/lib
            IMG_LIBS=-L/usr/local/gtk3-bundle/lib
            IMG_INCLUDES="-I/usr/local/gtk3-bundle/include"
        elif test -d /opt; then
            LIBS=-L/opt/lib
            IMG_LIBS=-L/opt/lib
            IMG_INCLUDES="-I/opt/include"
        fi
    else
        if test -d /usr/local/gtk3-bundle-x11; then
            LIBS=-L/usr/local/gtk3-bundle-x11/lib
            IMG_LIBS=-L/usr/local/gtk3-bundle-x11/lib
            IMG_INCLUDES="-I/usr/local/gtk3-bundle-x11/include"
        elif test -d /opt; then
            LIBS=-L/opt/lib
            IMG_LIBS=-L/opt/lib
            IMG_INCLUDES="-I/opt/include"
        fi
    fi

    IMG_FLAGS=
    AC_CHECK_LIB(z, main)
    AC_CHECK_LIB(png16, main)
    AC_CHECK_LIB(png16, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBPNG"
          IMG_LIBS="$IMG_LIBS -lpng16"
           echo '#define HAVE_LIBPNG 1'>> confdefs.h
    )
    AC_CHECK_LIB(tiff, main)
    AC_CHECK_LIB(tiff, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBTIFF"
          IMG_LIBS="$IMG_LIBS -ltiff")
    AC_CHECK_LIB(jpeg, main)
    AC_CHECK_LIB(jpeg, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBJPEG"
          IMG_LIBS="$IMG_LIBS -ljpeg")
    CURSES="-lcurses"
    AC_CHECK_LIB(rt, main, LIBRT="-lrt")

else
    tmplibs1=$LIBS
    AC_CHECK_LIB(m, main)
    AC_CHECK_LIB(dl, main)
    zzldflags=$LDFLAGS
    LDFLAGS=""
    if test "$ac_x_libraries" != ""; then
        LDFLAGS="$LDFLAGS -L$ac_x_libraries"
    fi
    AC_CHECK_LIB(X11, main)
    AC_CHECK_LIB(Xext, main)
    gxi=`${gtklocd}pkg-config --libs gtk+-3.0 | grep lXi`
    if test x"$gxi" != x; then
        AC_CHECK_LIB(Xi, main)
    fi

    IMG_INCLUDES="-I/usr/X11R6/include"
    IMG_LIBS=
    IMG_FLAGS=

dnl  Try to link static graphics libraries if found.

    AC_CHECK_LIB(png, main)
    AC_CHECK_LIB(png, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBPNG"
    if test $linux32 = yes; then
        if test -f /usr/lib/libpng.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib/libpng.a"
        else
            IMG_LIBS="$IMG_LIBS -lpng"
        fi
    else
        if test -f /usr/lib64/libpng.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib64/libpng.a"
        else
            IMG_LIBS="$IMG_LIBS -lpng"
        fi
    fi)

    AC_CHECK_LIB(tiff, main)
    AC_CHECK_LIB(tiff, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBTIFF"
    if test $linux32 = yes; then
        if test -f /usr/lib/libtiff.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib/libtiff.a"
        else
            IMG_LIBS="$IMG_LIBS -ltiff"
        fi
    else
        if test -f /usr/lib64/libtiff.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib64/libtiff.a"
        else
            IMG_LIBS="$IMG_LIBS -ltiff"
        fi
    fi)

    AC_CHECK_LIB(jpeg, main)
    AC_CHECK_LIB(jpeg, main, IMG_FLAGS="$IMG_FLAGS -DHAVE_LIBJPEG"
    if test $linux32 = yes; then
        if test -f /usr/lib/libjpeg.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib/libjpeg.a"
        else
            IMG_LIBS="$IMG_LIBS -ljpeg"
        fi
    else
        if test -f /usr/lib64/libjpeg.a; then
            IMG_LIBS="$IMG_LIBS /usr/lib64/libjpeg.a"
        else
            IMG_LIBS="$IMG_LIBS -ljpeg"
        fi
    fi)

    tmplibs1="$tmplibsq $IMG_LIBS"
    AC_CHECK_LIB(z, main)
    AC_CHECK_LIB(z, main, tmplibs1="$tmplibs1 -lz")
    LDFLAGS=$zzldflags

    DYNAMIC_LIBS="-DDYNAMIC_LIBS"
    LIBS=$tmplibs1

    if test -n "$ac_x_libraries"; then
        largs="$largs -L$ac_x_libraries"
    fi

    if test -n "$largs"; then
        LIBS="$largs $LIBS"
    fi
    if test ${OSNAME:0:5} = Linux; then
        AC_CHECK_LIB(pthread, main, EXTRALIBS="$EXTRALIBS -lpthread")
        AC_CHECK_LIB(dl, main, EXTRALIBS="$EXTRALIBS -ldl")
        AC_CHECK_LIB(X11, main, EXTRALIBS="$EXTRALIBS -lX11")
        AC_CHECK_LIB(Xext, main, EXTRALIBS="$EXTRALIBS -lXext")
    fi
    AC_CHECK_LIB(dl, main, LIBDL="-ldl")
    AC_CHECK_LIB(rt, main, LIBRT="-lrt")

    AC_CHECK_LIB(ncurses, main, [ CURSES="-lncurses" ],
        AC_CHECK_LIB(curses, main, [
            found=no
            for a in $lib_dirs; do
                if test -f $a/libcurses.a; then
                    CURSES="$a/libcurses.a"
                    break
                fi
            done
            if test $found = no; then
                CURSES="-lcurses"
            fi ], AC_CHECK_LIB(termcap, main, [
                found=no
                for a in $lib_dirs; do
                    if test -f $a/libtermcap.a; then
                        CURSES="$a/libtermcap.a"
                        break
                    fi
                done
                if test $found = no; then
                    CURSES="-ltermcap"
                fi ])
    ))
fi
AC_SUBST(MSLIBS)
AC_SUBST(DYNAMIC_LIBS)
AC_SUBST(REGEX)
AC_SUBST(NTNOCONS)
AC_SUBST(WRSRES)
AC_SUBST(MOZYRES)
AC_SUBST(XEDRES)
AC_SUBST(NEEDINT64)
AC_SUBST(CURSES)
AC_SUBST(SLIBS)
AC_SUBST(IMG_FLAGS)
AC_SUBST(IMG_INCLUDES)
AC_SUBST(IMG_LIBS)
AC_SUBST(EXTRALIBS)
AC_SUBST(LIBDL)
AC_SUBST(LIBRT)

dnl ***
dnl *** WRspice device library
dnl ***

DEVLIB_CALL='devlib/$(DEVLIB_STATIC)'
#if test "x$LSHFLAG" != x; then
#    if test "x$LSHFLAG" = x"-G"; then
#        DEVLIB_CALL='-Wl,-R$(prefix)/lib $(DEVLIB_SHARED)'
#    elif test $OSNAME = "Darwin"; then
#        DEVLIB_CALL='$(DEVLIB_SHARED)'
#    else
#        DEVLIB_CALL='-Wl,-rpath,$(prefix)/lib $(DEVLIB_SHARED)'
#    fi
#fi
AC_SUBST(DEVLIB_CALL)

dnl ***
dnl *** Checks for library functions
dnl ***

AC_FUNC_VPRINTF
AC_FUNC_WAIT3
if test $OSNAME = "Win32"; then
    dnl these are macros
    ac_cv_func_gethostname="yes"
    ac_cv_func_gethostbyname="yes"
    ac_cv_func_select="yes"
    ac_cv_func_socket="yes"
fi
AC_CHECK_LIB(m, main)
AC_CHECK_FUNCS(
    access acosh atexit cbrt chdir clearerr dup2 erf erfc fork fseeko \
    ftime getcwd getenv gethostname gethostbyname getpid getpwuid \
    getrlimit getrusage getwd hstrerror isatty kill lgamma mkstemp \
    mkstemps perror popen posix_memalign posix_openpt qsort raise \
    re_comp select shmget sigaction signal socket srand stat strchr \
    strcasecmp strcasestr strerror strtok_r system tcgetpgrp ulimit \
    unlink)

tmplibs=$LIBS
LIBS="$LIBS $CURSES" 
AC_CHECK_FUNCS(tgetent tigetstr)
LIBS=$tmplibs

dnl defines for htm
AC_CHECK_FUNC(strtok_r, ,SRCS_EXTRA="strtok_r.c")
HTM_DEFS="-DGIF_DECODE -DHAVE_CONFIG_H"
AC_SUBST(HTM_DEFS)
AC_SUBST(SRCS_EXTRA)

dnl defines for vl, httpget
AC_CHECK_FUNC(gettimeofday, VL_DEFS="$VL_DEFS -DHAVE_GETTIMEOFDAY"
  [echo '#define HAVE_GETTIMEOFDAY 1'>> confdefs.h])
AC_CHECK_FUNC(times, VL_DEFS="$VL_DEFS -DHAVE_TIMES"
  [echo '#define HAVE_TIMES 1'>> confdefs.h])
AC_CHECK_FUNC(vasprintf, VL_DEFS="$VL_DEFS -DHAVE_VASPRINTF"
  [echo '#define HAVE_VASPRINTF 1'>> confdefs.h])
AC_CHECK_FUNC(vsnprintf, VL_DEFS="$VL_DEFS -DHAVE_VSNPRINTF"
  [echo '#define HAVE_VSNPRINTF 1'>> confdefs.h])
AC_CHECK_FUNC(srandom, [echo '#define HAVE_SRANDOM 1'>> confdefs.h],
  VL_DEFS="$VL_DEFS -DNO_RANDOM")
AC_SUBST(VL_DEFS)

dnl Check for computed goto language entension support
dnl
echo $ac_n "checking for computed goto support in C++ ... "
#echo $ECHO_N "checking for computed goto support in C++ ... $ECHO_C"
cat > conftest.cc << EOF
int main()
{ static void *a[[]] = { &&l1, &&l2 }; goto *a[[0]];
l1: return (0);
l2: return (0); }
EOF

$CXX -c conftest.cc 1>&5 2>&5
if test $? = 0; then
    echo '#define HAVE_COMPUTED_GOTO 1'>> confdefs.h
    echo yes
else
    echo no
fi
rm -rf conftest*

dnl  Configure for local malloc.  The local allocation system has
dnl  problems with Windows, OS X, AIX.
if test x$MALLOC != x; then
    if test -f ./malloc/local_malloc.cc; then  
        echo '#define HAVE_LOCAL_ALLOCATOR 1'>> confdefs.h
    fi
fi

LINKCC=$CXX
if test $OSNAME = "Win32"; then
    LINKCC="$CXX -static-libgcc -static-libstdc++"
    DEVWINDLL="-L../../wrspice/bin -lwrspice"
fi
dnl # No longer attempt to statically link gcc stuff, impossible as
dnl # other libraries link to it.
dnl #LINKCC="$CXX -nodefaultlibs"
dnl #STDCLIB="-Wl,-Bstatic -lstdc++ -Wl,-Bdynamic -lgcc -lgcc_eh -lc"
AC_SUBST(LINKCC)
AC_SUBST(STDCLIB)
AC_SUBST(DEVWINDLL)

dnl delete graphics-specific libraries
if test -f ginterf/ginterf.a; then
    rm -f ginterf/ginterf.a;
fi

if test -f config.h.in; then
    AC_CONFIG_HEADER(config.h)
elif test -f include/config.h.in; then
    AC_CONFIG_HEADER(include/config.h)
fi

makefiles="Makefile"
if test -d util; then
    makefiles="$makefiles util/Makefile"
fi
if test -d ginterf; then
    makefiles="$makefiles ginterf/Makefile"
fi
if test -d ${GRPREF}interf; then
    makefiles="$makefiles ${GRPREF}interf/Makefile"
fi
if test -d miscutil; then
    makefiles="$makefiles miscutil/Makefile"
fi
if test -d malloc; then
    makefiles="$makefiles malloc/Makefile"
fi

if test -n "$REGEX" -a -d regex; then
    makefiles="$makefiles regex/Makefile"
fi
if test -d ../secure; then
    makefiles="$makefiles ../secure/Makefile"
fi
if test -d ../mozy; then
    makefiles="$makefiles \
        ../mozy/src/gtkmozy/Makefile \
        ../mozy/src/help/Makefile \
        ../mozy/src/htm/Makefile \
        ../mozy/src/httpget/Makefile \
        ../mozy/src/imsave/Makefile \
        ../mozy/Makefile"
fi
if test -d ../mrouter; then
    makefiles="$makefiles ../mrouter/Makefile"
    makefiles="$makefiles ../mrouter/lddb/Makefile"
    makefiles="$makefiles ../mrouter/mrouter/Makefile"
    makefiles="$makefiles ../mrouter/examples/Makefile"
fi
if test -d ../xic; then
    if test $with_oa = yes; then
        oa=../xic/src/oa/Makefile
    fi
    makefiles="$makefiles \
        ../xic/src/cd/Makefile \
        ../xic/src/display/Makefile \
        ../xic/src/drc/Makefile \
        ../xic/src/edit/Makefile \
        ../xic/src/extract/Makefile \
        ../xic/src/fileio/Makefile \
        ../xic/src/geom/Makefile \
        ../xic/src/${GRPREF}xic/Makefile \
        ../xic/src/main/Makefile \
        $oa \
        ../xic/src/parser/Makefile \
        ../xic/src/sced/Makefile \
        ../xic/src/scrkit/Makefile \
        ../xic/src/sparse/Makefile \
        ../xic/src/wrspif/Makefile \
        ../xic/src/tech/Makefile \
        ../xic/plugins/Makefile \
        ../xic/Makefile"
fi
if test -d ../KLU; then
    makefiles="$makefiles ../KLU/Makefile"
fi
if test -d ../vl; then
    makefiles="$makefiles ../vl/Makefile"
fi
if test -d ../wrspice; then
    makefiles="$makefiles \
        ../wrspice/src/analysis/Makefile \
        ../wrspice/src/ckt/Makefile \
        ../wrspice/src/cp/Makefile \
        ../wrspice/src/fte/Makefile \
        ../wrspice/src/${GRPREF}wrs/Makefile \
        ../wrspice/src/inp/Makefile \
        ../wrspice/src/misc/Makefile \
        ../wrspice/src/plot/Makefile \
        ../wrspice/src/sparse/Makefile \
        ../wrspice/ipc_demo_files/Makefile \
        ../wrspice/Makefile \
        ../wrspice/devlib/Makefile"
    (cd ../wrspice/devlib; make -f Makefile.in devlist)
    subd="`cat ../wrspice/devlib/devices ../wrspice/devlib/modules`"
    for a in $subd adms disto; do
        makefiles="$makefiles ../wrspice/devlib/$a/Makefile"
    done
    rm -f ../wrspice/devlib/devices ../wrspice/devlib/modules
fi
if test -d ../adms; then
    makefiles="$makefiles ../adms/Makefile"
fi
if test -d ../fastcap; then
    makefiles="$makefiles ../fastcap/Makefile"
    makefiles="$makefiles ../fastcap/fc_accs/Makefile"
fi
if test -d ../fasthenry; then
    makefiles="$makefiles ../fasthenry/Makefile"
fi

AC_OUTPUT($makefiles)

echo '#! /bin/sh'               > info.sh
echo "# created by configure, don't edit" >> info.sh
echo                            >> info.sh
echo "case \$1 in"              >> info.sh
echo "date) echo $DATE;;"       >> info.sh
echo "prefix) echo $prefix;;"   >> info.sh
echo "toolroot) echo $TOOLROOT;;" >> info.sh
echo "osname) echo $OSNAME;;"   >> info.sh
echo "arch) echo $ARCH;;"       >> info.sh
echo "dist_suffix) echo $DIST_SUFFIX;;" >> info.sh
echo "with_oa) echo $with_oa;;" >> info.sh
echo "esac"                     >> info.sh
chmod 755 info.sh

